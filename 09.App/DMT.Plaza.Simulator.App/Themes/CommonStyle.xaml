<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="PresentationOptions">

    <Thickness x:Key="CommonMargin">5</Thickness>
    <GridLength x:Key="PageMargin">5</GridLength>

    <!--  COMMON INPUT FONT SIZE  -->
    <sys:Double x:Key="InputFontSize18" PresentationOptions:Freeze="True">18</sys:Double>
    <!--  RADIO BUTTON RELATED SIZE  -->
    <CornerRadius x:Key="CommonRadioButtonCornerRadius" PresentationOptions:Freeze="True">9</CornerRadius>

    <!--  TEXT BOX COLORS  -->
    <SolidColorBrush x:Key="TextBoxMouseOverBorderBrush"
                     PresentationOptions:Freeze="True"
                     Color="#7F2222FF" />
    <SolidColorBrush x:Key="TextBoxFocusedBorderBrush"
                     PresentationOptions:Freeze="True"
                     Color="CornflowerBlue" />
    <SolidColorBrush x:Key="TextBoxDisableForeground"
                     PresentationOptions:Freeze="True"
                     Color="Black" />
    <SolidColorBrush x:Key="TextBoxDisableBackground"
                     PresentationOptions:Freeze="True"
                     Color="#7FFFFFFF" />

    <!--  TEXT BOX STYLE  -->
    <Style x:Key="CommonTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource InputFontSize18}" />
        <Setter Property="TextAlignment" Value="Center" />
        <!--  FOR ROUND CONNER AND BORDER COLOR  -->
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg"
                            Margin="0"
                            Padding="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0"
                                      Padding="0"
                                      Background="{TemplateBinding Background}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="bg" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="bg" Property="Opacity" Value=".5" />
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource TextBoxDisableBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TextBoxDisableForeground}" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bg" Property="Opacity" Value=".5" />
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource TextBoxDisableBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TextBoxDisableForeground}" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PASSWORD BOX STYLE  -->
    <Style x:Key="CommonPwdBox" TargetType="PasswordBox">
        <Setter Property="FontSize" Value="{StaticResource InputFontSize18}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <!--  FOR ROUND CONNER AND BORDER COLOR  -->
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="bg"
                            Margin="0"
                            Padding="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0"
                                      Padding="0"
                                      Background="{TemplateBinding Background}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="bg" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bg" Property="Opacity" Value=".5" />
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource TextBoxDisableBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TextBoxDisableForeground}" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  COMBO BOX STYLE  -->
    <Style x:Key="CommonComboBox" TargetType="ComboBox">
        <Setter Property="FontSize" Value="{StaticResource InputFontSize18}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!--  CHECK BOX STYLE  -->
    <Style x:Key="CommonCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                        <Grid>
                            <!--  ContentPresenter displays content of CheckBox  -->
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <!--  This Border displays a semi-transparent red X  -->
                            <Border BorderBrush="Black"
                                    BorderThickness="2"
                                    CornerRadius="2">
                                <Image Name="img" />
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="..\Images\States\checked.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RADIO BUTTON STYLE  -->
    <Style x:Key="CommonRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Background}" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=FontSize}"
                                  Height="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=FontSize}"
                                  VerticalAlignment="Center">
                                <!--  Define size of the Bullet  -->
                                <!--  The two borders  -->
                                <Border Name="RadioOuter"
                                        Background="Transparent"
                                        BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}"
                                        BorderThickness="2"
                                        CornerRadius="{DynamicResource CommonRadioButtonCornerRadius}" />
                                <Border Name="RadioMark"
                                        Margin="4"
                                        Background="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=Foreground}"
                                        CornerRadius="{DynamicResource CommonRadioButtonCornerRadius}"
                                        Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--  Text element  -->
                        <TextBlock Margin="3,0" VerticalAlignment="Center">
                            <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <!--  If item is checked, trigger the visibility of the mark  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--  If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting  -->
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>